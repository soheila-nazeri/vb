<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picInfo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KKBJBxQB5wkAsrBKMhQyjNEXkFgAAAAD/9k=
</value>
  </data>
</root>